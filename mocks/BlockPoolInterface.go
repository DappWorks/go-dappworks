// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import core "github.com/dappley/go-dappley/core"
import mock "github.com/stretchr/testify/mock"
import peer "github.com/libp2p/go-libp2p-peer"

// BlockPoolInterface is an autogenerated mock type for the BlockPoolInterface type
type BlockPoolInterface struct {
	mock.Mock
}

// BlockRequestCh provides a mock function with given fields:
func (_m *BlockPoolInterface) BlockRequestCh() chan core.BlockRequestPars {
	ret := _m.Called()

	var r0 chan core.BlockRequestPars
	if rf, ok := ret.Get(0).(func() chan core.BlockRequestPars); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan core.BlockRequestPars)
		}
	}

	return r0
}

// GetBlockchain provides a mock function with given fields:
func (_m *BlockPoolInterface) GetBlockchain() *core.Blockchain {
	ret := _m.Called()

	var r0 *core.Blockchain
	if rf, ok := ret.Get(0).(func() *core.Blockchain); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*core.Blockchain)
		}
	}

	return r0
}

// Push provides a mock function with given fields: block, pid
func (_m *BlockPoolInterface) Push(block *core.Block, pid peer.ID) {
	_m.Called(block, pid)
}

// SetBlockchain provides a mock function with given fields: bc
func (_m *BlockPoolInterface) SetBlockchain(bc *core.Blockchain) {
	_m.Called(bc)
}

// VerifyTransactions provides a mock function with given fields: utxo, forkBlks
func (_m *BlockPoolInterface) VerifyTransactions(utxo core.UTXOIndex, forkBlks []*core.Block) bool {
	ret := _m.Called(utxo, forkBlks)

	var r0 bool
	if rf, ok := ret.Get(0).(func(core.UTXOIndex, []*core.Block) bool); ok {
		r0 = rf(utxo, forkBlks)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
