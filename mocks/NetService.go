// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import core "github.com/dappley/go-dappley/core"
import mock "github.com/stretchr/testify/mock"
import peer "github.com/libp2p/go-libp2p-peer"

// NetService is an autogenerated mock type for the NetService type
type NetService struct {
	mock.Mock
}

// BroadcastBlock provides a mock function with given fields: block
func (_m *NetService) BroadcastBlock(block *core.Block) error {
	ret := _m.Called(block)

	var r0 error
	if rf, ok := ret.Get(0).(func(*core.Block) error); ok {
		r0 = rf(block)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetBlockchain provides a mock function with given fields:
func (_m *NetService) GetBlockchain() *core.Blockchain {
	ret := _m.Called()

	var r0 *core.Blockchain
	if rf, ok := ret.Get(0).(func() *core.Blockchain); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*core.Blockchain)
		}
	}

	return r0
}

// GetPeerID provides a mock function with given fields:
func (_m *NetService) GetPeerID() peer.ID {
	ret := _m.Called()

	var r0 peer.ID
	if rf, ok := ret.Get(0).(func() peer.ID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(peer.ID)
	}

	return r0
}
